name: Deploy

on:
  push:
    branches:
      - development
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-backend:
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: Checkout project
        uses: actions/checkout@v2

      - name: Build image
        uses: whoan/docker-build-with-cache-action@v5
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          image_name: backend
          registry: ghcr.io
          image_tag: latest
          context: ./
          dockerfile: ./.docker/backend.Dockerfile

  build-frontend:
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build image
        uses: whoan/docker-build-with-cache-action@v5
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          image_name: frontend
          registry: ghcr.io
          image_tag: latest
          context: ./
          dockerfile: ./.docker/frontend.Dockerfile

  deploy:
    needs: [build-backend, build-frontend]
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Copy docker-compose.yml to deployment server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEPLOYMENT_HOST }}
          username: ${{ secrets.DEPLOYMENT_USERNAME }}
          password: ${{ secrets.DEPLOYMENT_SSH_PASSWORD }}
          source: .docker/docker-compose.yml
          target: app

      - name: Run docker-compose.yml on deployment server
        uses: appleboy/ssh-action@master
        env:
          GITHUB_USERNAME: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          host: ${{ secrets.DEPLOYMENT_HOST }}
          username: ${{ secrets.DEPLOYMENT_USERNAME }}
          password: ${{ secrets.DEPLOYMENT_SSH_PASSWORD }}
          envs: GITHUB_USERNAME,GITHUB_TOKEN
          script: |
            cd app/.docker/
            export GITHUB_USERNAME=$GITHUB_USERNAME
            export GITHUB_TOKEN=$GITHUB_TOKEN
            echo "$GITHUB_TOKEN" | sudo docker login ghcr.io -u $GITHUB_USERNAME --password-stdin
            sudo docker pull ghcr.io/vitaliibedletskyi/backend-starter/backend:latest
            sudo docker pull ghcr.io/vitaliibedletskyi/backend-starter/frontend:latest
            sudo docker compose -f docker-compose.yml stop
            sudo docker compose -f docker-compose.yml up -d --build
